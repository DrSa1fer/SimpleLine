### YamlMime:ManagedReference
items:
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument
  commentId: T:SimpleLineLibrary.Services.Invokation.Execution.Argument
  id: Argument
  parent: SimpleLineLibrary.Services.Invokation.Execution
  children:
  - SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor
  - SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor(System.String,System.String)
  - SimpleLineLibrary.Services.Invokation.Execution.Argument.Key
  - SimpleLineLibrary.Services.Invokation.Execution.Argument.Value
  - SimpleLineLibrary.Services.Invokation.Execution.Argument.WithKey
  - SimpleLineLibrary.Services.Invokation.Execution.Argument.WithValue
  langs:
  - csharp
  - vb
  name: Argument
  nameWithType: Argument
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument
  type: Class
  source:
    remote:
      path: SimpleLine/Services/Invokation/Execution/Argument.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: Argument
    path: ../SimpleLine/Services/Invokation/Execution/Argument.cs
    startLine: 2
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Services.Invokation.Execution
  syntax:
    content: 'public record Argument : IEquatable<Argument>'
    content.vb: Public Class Argument Implements IEquatable(Of Argument)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{SimpleLineLibrary.Services.Invokation.Execution.Argument}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor
  commentId: M:SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor
  id: '#ctor'
  parent: SimpleLineLibrary.Services.Invokation.Execution.Argument
  langs:
  - csharp
  - vb
  name: Argument()
  nameWithType: Argument.Argument()
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument.Argument()
  type: Constructor
  source:
    remote:
      path: SimpleLine/Services/Invokation/Execution/Argument.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: .ctor
    path: ../SimpleLine/Services/Invokation/Execution/Argument.cs
    startLine: 4
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Services.Invokation.Execution
  syntax:
    content: public Argument()
    content.vb: Public Sub New()
  overload: SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor*
  nameWithType.vb: Argument.New()
  fullName.vb: SimpleLineLibrary.Services.Invokation.Execution.Argument.New()
  name.vb: New()
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor(System.String,System.String)
  commentId: M:SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: SimpleLineLibrary.Services.Invokation.Execution.Argument
  langs:
  - csharp
  - vb
  name: Argument(string, string)
  nameWithType: Argument.Argument(string, string)
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument.Argument(string, string)
  type: Constructor
  source:
    remote:
      path: SimpleLine/Services/Invokation/Execution/Argument.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: .ctor
    path: ../SimpleLine/Services/Invokation/Execution/Argument.cs
    startLine: 10
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Services.Invokation.Execution
  syntax:
    content: public Argument(string key, string value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    content.vb: Public Sub New(key As String, value As String)
  overload: SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor*
  nameWithType.vb: Argument.New(String, String)
  fullName.vb: SimpleLineLibrary.Services.Invokation.Execution.Argument.New(String, String)
  name.vb: New(String, String)
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument.Key
  commentId: F:SimpleLineLibrary.Services.Invokation.Execution.Argument.Key
  id: Key
  parent: SimpleLineLibrary.Services.Invokation.Execution.Argument
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: Argument.Key
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument.Key
  type: Field
  source:
    remote:
      path: SimpleLine/Services/Invokation/Execution/Argument.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: Key
    path: ../SimpleLine/Services/Invokation/Execution/Argument.cs
    startLine: 16
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Services.Invokation.Execution
  syntax:
    content: public string? Key
    return:
      type: System.String
    content.vb: Public Key As String
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument.Value
  commentId: F:SimpleLineLibrary.Services.Invokation.Execution.Argument.Value
  id: Value
  parent: SimpleLineLibrary.Services.Invokation.Execution.Argument
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Argument.Value
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument.Value
  type: Field
  source:
    remote:
      path: SimpleLine/Services/Invokation/Execution/Argument.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: Value
    path: ../SimpleLine/Services/Invokation/Execution/Argument.cs
    startLine: 17
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Services.Invokation.Execution
  syntax:
    content: public string? Value
    return:
      type: System.String
    content.vb: Public Value As String
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithKey
  commentId: M:SimpleLineLibrary.Services.Invokation.Execution.Argument.WithKey
  id: WithKey
  parent: SimpleLineLibrary.Services.Invokation.Execution.Argument
  langs:
  - csharp
  - vb
  name: WithKey()
  nameWithType: Argument.WithKey()
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithKey()
  type: Method
  source:
    remote:
      path: SimpleLine/Services/Invokation/Execution/Argument.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: WithKey
    path: ../SimpleLine/Services/Invokation/Execution/Argument.cs
    startLine: 19
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Services.Invokation.Execution
  syntax:
    content: public bool WithKey()
    return:
      type: System.Boolean
    content.vb: Public Function WithKey() As Boolean
  overload: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithKey*
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithValue
  commentId: M:SimpleLineLibrary.Services.Invokation.Execution.Argument.WithValue
  id: WithValue
  parent: SimpleLineLibrary.Services.Invokation.Execution.Argument
  langs:
  - csharp
  - vb
  name: WithValue()
  nameWithType: Argument.WithValue()
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithValue()
  type: Method
  source:
    remote:
      path: SimpleLine/Services/Invokation/Execution/Argument.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: WithValue
    path: ../SimpleLine/Services/Invokation/Execution/Argument.cs
    startLine: 23
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Services.Invokation.Execution
  syntax:
    content: public bool WithValue()
    return:
      type: System.Boolean
    content.vb: Public Function WithValue() As Boolean
  overload: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithValue*
references:
- uid: SimpleLineLibrary.Services.Invokation.Execution
  commentId: N:SimpleLineLibrary.Services.Invokation.Execution
  href: SimpleLineLibrary.html
  name: SimpleLineLibrary.Services.Invokation.Execution
  nameWithType: SimpleLineLibrary.Services.Invokation.Execution
  fullName: SimpleLineLibrary.Services.Invokation.Execution
  spec.csharp:
  - uid: SimpleLineLibrary
    name: SimpleLineLibrary
    href: SimpleLineLibrary.html
  - name: .
  - uid: SimpleLineLibrary.Services
    name: Services
    href: SimpleLineLibrary.Services.html
  - name: .
  - uid: SimpleLineLibrary.Services.Invokation
    name: Invokation
    href: SimpleLineLibrary.Services.Invokation.html
  - name: .
  - uid: SimpleLineLibrary.Services.Invokation.Execution
    name: Execution
    href: SimpleLineLibrary.Services.Invokation.Execution.html
  spec.vb:
  - uid: SimpleLineLibrary
    name: SimpleLineLibrary
    href: SimpleLineLibrary.html
  - name: .
  - uid: SimpleLineLibrary.Services
    name: Services
    href: SimpleLineLibrary.Services.html
  - name: .
  - uid: SimpleLineLibrary.Services.Invokation
    name: Invokation
    href: SimpleLineLibrary.Services.Invokation.html
  - name: .
  - uid: SimpleLineLibrary.Services.Invokation.Execution
    name: Execution
    href: SimpleLineLibrary.Services.Invokation.Execution.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{SimpleLineLibrary.Services.Invokation.Execution.Argument}
  commentId: T:System.IEquatable{SimpleLineLibrary.Services.Invokation.Execution.Argument}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Argument>
  nameWithType: IEquatable<Argument>
  fullName: System.IEquatable<SimpleLineLibrary.Services.Invokation.Execution.Argument>
  nameWithType.vb: IEquatable(Of Argument)
  fullName.vb: System.IEquatable(Of SimpleLineLibrary.Services.Invokation.Execution.Argument)
  name.vb: IEquatable(Of Argument)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: SimpleLineLibrary.Services.Invokation.Execution.Argument
    name: Argument
    href: SimpleLineLibrary.Services.Invokation.Execution.Argument.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SimpleLineLibrary.Services.Invokation.Execution.Argument
    name: Argument
    href: SimpleLineLibrary.Services.Invokation.Execution.Argument.html
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor*
  commentId: Overload:SimpleLineLibrary.Services.Invokation.Execution.Argument.#ctor
  href: SimpleLineLibrary.Services.Invokation.Execution.Argument.html#SimpleLineLibrary_Services_Invokation_Execution_Argument__ctor
  name: Argument
  nameWithType: Argument.Argument
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument.Argument
  nameWithType.vb: Argument.New
  fullName.vb: SimpleLineLibrary.Services.Invokation.Execution.Argument.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithKey*
  commentId: Overload:SimpleLineLibrary.Services.Invokation.Execution.Argument.WithKey
  href: SimpleLineLibrary.Services.Invokation.Execution.Argument.html#SimpleLineLibrary_Services_Invokation_Execution_Argument_WithKey
  name: WithKey
  nameWithType: Argument.WithKey
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithKey
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithValue*
  commentId: Overload:SimpleLineLibrary.Services.Invokation.Execution.Argument.WithValue
  href: SimpleLineLibrary.Services.Invokation.Execution.Argument.html#SimpleLineLibrary_Services_Invokation_Execution_Argument_WithValue
  name: WithValue
  nameWithType: Argument.WithValue
  fullName: SimpleLineLibrary.Services.Invokation.Execution.Argument.WithValue
