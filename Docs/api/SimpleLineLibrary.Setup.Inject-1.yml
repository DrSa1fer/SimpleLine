### YamlMime:ManagedReference
items:
- uid: SimpleLineLibrary.Setup.Inject`1
  commentId: T:SimpleLineLibrary.Setup.Inject`1
  id: Inject`1
  parent: SimpleLineLibrary.Setup
  children:
  - SimpleLineLibrary.Setup.Inject`1.#ctor(`0)
  - SimpleLineLibrary.Setup.Inject`1.New(`0)
  langs:
  - csharp
  - vb
  name: Inject<T>
  nameWithType: Inject<T>
  fullName: SimpleLineLibrary.Setup.Inject<T>
  type: Class
  source:
    remote:
      path: SimpleLine/Setup/Options/Inject.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: Inject
    path: ../SimpleLine/Setup/Options/Inject.cs
    startLine: 4
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Setup
  syntax:
    content: 'public sealed class Inject<T> : BaseOption<T>'
    typeParameters:
    - id: T
    content.vb: Public NotInheritable Class Inject(Of T) Inherits BaseOption(Of T)
  inheritance:
  - System.Object
  - SimpleLineLibrary.Setup.BaseOption{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Inject(Of T)
  fullName.vb: SimpleLineLibrary.Setup.Inject(Of T)
  name.vb: Inject(Of T)
- uid: SimpleLineLibrary.Setup.Inject`1.#ctor(`0)
  commentId: M:SimpleLineLibrary.Setup.Inject`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: SimpleLineLibrary.Setup.Inject`1
  langs:
  - csharp
  - vb
  name: Inject(T)
  nameWithType: Inject<T>.Inject(T)
  fullName: SimpleLineLibrary.Setup.Inject<T>.Inject(T)
  type: Constructor
  source:
    remote:
      path: SimpleLine/Setup/Options/Inject.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: .ctor
    path: ../SimpleLine/Setup/Options/Inject.cs
    startLine: 8
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Setup
  syntax:
    content: public Inject(T value)
    parameters:
    - id: value
      type: '{T}'
    content.vb: Public Sub New(value As T)
  overload: SimpleLineLibrary.Setup.Inject`1.#ctor*
  nameWithType.vb: Inject(Of T).New(T)
  fullName.vb: SimpleLineLibrary.Setup.Inject(Of T).New(T)
  name.vb: New(T)
- uid: SimpleLineLibrary.Setup.Inject`1.New(`0)
  commentId: M:SimpleLineLibrary.Setup.Inject`1.New(`0)
  id: New(`0)
  parent: SimpleLineLibrary.Setup.Inject`1
  langs:
  - csharp
  - vb
  name: New(T)
  nameWithType: Inject<T>.New(T)
  fullName: SimpleLineLibrary.Setup.Inject<T>.New(T)
  type: Method
  source:
    remote:
      path: SimpleLine/Setup/Options/Inject.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: New
    path: ../SimpleLine/Setup/Options/Inject.cs
    startLine: 18
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Setup
  syntax:
    content: public static Inject<T> New(T value)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: SimpleLineLibrary.Setup.Inject`1
    content.vb: Public Shared Function [New](value As T) As Inject(Of T)
  overload: SimpleLineLibrary.Setup.Inject`1.New*
  nameWithType.vb: Inject(Of T).New(T)
  fullName.vb: SimpleLineLibrary.Setup.Inject(Of T).New(T)
references:
- uid: SimpleLineLibrary.Setup
  commentId: N:SimpleLineLibrary.Setup
  href: SimpleLineLibrary.html
  name: SimpleLineLibrary.Setup
  nameWithType: SimpleLineLibrary.Setup
  fullName: SimpleLineLibrary.Setup
  spec.csharp:
  - uid: SimpleLineLibrary
    name: SimpleLineLibrary
    href: SimpleLineLibrary.html
  - name: .
  - uid: SimpleLineLibrary.Setup
    name: Setup
    href: SimpleLineLibrary.Setup.html
  spec.vb:
  - uid: SimpleLineLibrary
    name: SimpleLineLibrary
    href: SimpleLineLibrary.html
  - name: .
  - uid: SimpleLineLibrary.Setup
    name: Setup
    href: SimpleLineLibrary.Setup.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SimpleLineLibrary.Setup.BaseOption{{T}}
  commentId: T:SimpleLineLibrary.Setup.BaseOption{`0}
  parent: SimpleLineLibrary.Setup
  definition: SimpleLineLibrary.Setup.BaseOption`1
  href: SimpleLineLibrary.Setup.BaseOption-1.html
  name: BaseOption<T>
  nameWithType: BaseOption<T>
  fullName: SimpleLineLibrary.Setup.BaseOption<T>
  nameWithType.vb: BaseOption(Of T)
  fullName.vb: SimpleLineLibrary.Setup.BaseOption(Of T)
  name.vb: BaseOption(Of T)
  spec.csharp:
  - uid: SimpleLineLibrary.Setup.BaseOption`1
    name: BaseOption
    href: SimpleLineLibrary.Setup.BaseOption-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SimpleLineLibrary.Setup.BaseOption`1
    name: BaseOption
    href: SimpleLineLibrary.Setup.BaseOption-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SimpleLineLibrary.Setup.BaseOption`1
  commentId: T:SimpleLineLibrary.Setup.BaseOption`1
  href: SimpleLineLibrary.Setup.BaseOption-1.html
  name: BaseOption<T>
  nameWithType: BaseOption<T>
  fullName: SimpleLineLibrary.Setup.BaseOption<T>
  nameWithType.vb: BaseOption(Of T)
  fullName.vb: SimpleLineLibrary.Setup.BaseOption(Of T)
  name.vb: BaseOption(Of T)
  spec.csharp:
  - uid: SimpleLineLibrary.Setup.BaseOption`1
    name: BaseOption
    href: SimpleLineLibrary.Setup.BaseOption-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SimpleLineLibrary.Setup.BaseOption`1
    name: BaseOption
    href: SimpleLineLibrary.Setup.BaseOption-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SimpleLineLibrary.Setup.Inject`1.#ctor*
  commentId: Overload:SimpleLineLibrary.Setup.Inject`1.#ctor
  href: SimpleLineLibrary.Setup.Inject-1.html#SimpleLineLibrary_Setup_Inject_1__ctor__0_
  name: Inject
  nameWithType: Inject<T>.Inject
  fullName: SimpleLineLibrary.Setup.Inject<T>.Inject
  nameWithType.vb: Inject(Of T).New
  fullName.vb: SimpleLineLibrary.Setup.Inject(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SimpleLineLibrary.Setup.Inject`1.New*
  commentId: Overload:SimpleLineLibrary.Setup.Inject`1.New
  href: SimpleLineLibrary.Setup.Inject-1.html#SimpleLineLibrary_Setup_Inject_1_New__0_
  name: New
  nameWithType: Inject<T>.New
  fullName: SimpleLineLibrary.Setup.Inject<T>.New
  nameWithType.vb: Inject(Of T).New
  fullName.vb: SimpleLineLibrary.Setup.Inject(Of T).New
- uid: SimpleLineLibrary.Setup.Inject`1
  commentId: T:SimpleLineLibrary.Setup.Inject`1
  parent: SimpleLineLibrary.Setup
  href: SimpleLineLibrary.Setup.Inject-1.html
  name: Inject<T>
  nameWithType: Inject<T>
  fullName: SimpleLineLibrary.Setup.Inject<T>
  nameWithType.vb: Inject(Of T)
  fullName.vb: SimpleLineLibrary.Setup.Inject(Of T)
  name.vb: Inject(Of T)
  spec.csharp:
  - uid: SimpleLineLibrary.Setup.Inject`1
    name: Inject
    href: SimpleLineLibrary.Setup.Inject-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SimpleLineLibrary.Setup.Inject`1
    name: Inject
    href: SimpleLineLibrary.Setup.Inject-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
