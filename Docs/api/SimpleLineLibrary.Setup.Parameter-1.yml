### YamlMime:ManagedReference
items:
- uid: SimpleLineLibrary.Setup.Parameter`1
  commentId: T:SimpleLineLibrary.Setup.Parameter`1
  id: Parameter`1
  parent: SimpleLineLibrary.Setup
  children:
  - SimpleLineLibrary.Setup.Parameter`1.#ctor(System.String[])
  - SimpleLineLibrary.Setup.Parameter`1.#ctor(System.String[],`0)
  - SimpleLineLibrary.Setup.Parameter`1.CustomConverter
  - SimpleLineLibrary.Setup.Parameter`1.New(System.String[])
  - SimpleLineLibrary.Setup.Parameter`1.New(System.String[],`0)
  langs:
  - csharp
  - vb
  name: Parameter<T>
  nameWithType: Parameter<T>
  fullName: SimpleLineLibrary.Setup.Parameter<T>
  type: Class
  source:
    remote:
      path: SimpleLine/Setup/Options/Parameter.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: Parameter
    path: ../SimpleLine/Setup/Options/Parameter.cs
    startLine: 5
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Setup
  syntax:
    content: 'public sealed class Parameter<T> : BaseOption<T>'
    typeParameters:
    - id: T
    content.vb: Public NotInheritable Class Parameter(Of T) Inherits BaseOption(Of T)
  inheritance:
  - System.Object
  - SimpleLineLibrary.Setup.BaseOption{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Parameter(Of T)
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T)
  name.vb: Parameter(Of T)
- uid: SimpleLineLibrary.Setup.Parameter`1.CustomConverter
  commentId: P:SimpleLineLibrary.Setup.Parameter`1.CustomConverter
  id: CustomConverter
  parent: SimpleLineLibrary.Setup.Parameter`1
  langs:
  - csharp
  - vb
  name: CustomConverter
  nameWithType: Parameter<T>.CustomConverter
  fullName: SimpleLineLibrary.Setup.Parameter<T>.CustomConverter
  type: Property
  source:
    remote:
      path: SimpleLine/Setup/Options/Parameter.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: CustomConverter
    path: ../SimpleLine/Setup/Options/Parameter.cs
    startLine: 9
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Setup
  syntax:
    content: public Func<string, T>? CustomConverter { get; init; }
    parameters: []
    return:
      type: System.Func{System.String,{T}}
    content.vb: Public Property CustomConverter As Func(Of String, T)
  overload: SimpleLineLibrary.Setup.Parameter`1.CustomConverter*
  nameWithType.vb: Parameter(Of T).CustomConverter
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T).CustomConverter
- uid: SimpleLineLibrary.Setup.Parameter`1.#ctor(System.String[])
  commentId: M:SimpleLineLibrary.Setup.Parameter`1.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: SimpleLineLibrary.Setup.Parameter`1
  langs:
  - csharp
  - vb
  name: Parameter(params string[])
  nameWithType: Parameter<T>.Parameter(params string[])
  fullName: SimpleLineLibrary.Setup.Parameter<T>.Parameter(params string[])
  type: Constructor
  source:
    remote:
      path: SimpleLine/Setup/Options/Parameter.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: .ctor
    path: ../SimpleLine/Setup/Options/Parameter.cs
    startLine: 11
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Setup
  syntax:
    content: public Parameter(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
    content.vb: Public Sub New(ParamArray keys As String())
  overload: SimpleLineLibrary.Setup.Parameter`1.#ctor*
  nameWithType.vb: Parameter(Of T).New(ParamArray String())
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T).New(ParamArray String())
  name.vb: New(ParamArray String())
- uid: SimpleLineLibrary.Setup.Parameter`1.#ctor(System.String[],`0)
  commentId: M:SimpleLineLibrary.Setup.Parameter`1.#ctor(System.String[],`0)
  id: '#ctor(System.String[],`0)'
  parent: SimpleLineLibrary.Setup.Parameter`1
  langs:
  - csharp
  - vb
  name: Parameter(string[], T)
  nameWithType: Parameter<T>.Parameter(string[], T)
  fullName: SimpleLineLibrary.Setup.Parameter<T>.Parameter(string[], T)
  type: Constructor
  source:
    remote:
      path: SimpleLine/Setup/Options/Parameter.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: .ctor
    path: ../SimpleLine/Setup/Options/Parameter.cs
    startLine: 15
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Setup
  syntax:
    content: public Parameter(string[] keys, T value)
    parameters:
    - id: keys
      type: System.String[]
    - id: value
      type: '{T}'
    content.vb: Public Sub New(keys As String(), value As T)
  overload: SimpleLineLibrary.Setup.Parameter`1.#ctor*
  nameWithType.vb: Parameter(Of T).New(String(), T)
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T).New(String(), T)
  name.vb: New(String(), T)
- uid: SimpleLineLibrary.Setup.Parameter`1.New(System.String[])
  commentId: M:SimpleLineLibrary.Setup.Parameter`1.New(System.String[])
  id: New(System.String[])
  parent: SimpleLineLibrary.Setup.Parameter`1
  langs:
  - csharp
  - vb
  name: New(params string[])
  nameWithType: Parameter<T>.New(params string[])
  fullName: SimpleLineLibrary.Setup.Parameter<T>.New(params string[])
  type: Method
  source:
    remote:
      path: SimpleLine/Setup/Options/Parameter.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: New
    path: ../SimpleLine/Setup/Options/Parameter.cs
    startLine: 30
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Setup
  syntax:
    content: public static Parameter<T> New(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
    return:
      type: SimpleLineLibrary.Setup.Parameter`1
    content.vb: Public Shared Function [New](ParamArray keys As String()) As Parameter(Of T)
  overload: SimpleLineLibrary.Setup.Parameter`1.New*
  nameWithType.vb: Parameter(Of T).New(ParamArray String())
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T).New(ParamArray String())
  name.vb: New(ParamArray String())
- uid: SimpleLineLibrary.Setup.Parameter`1.New(System.String[],`0)
  commentId: M:SimpleLineLibrary.Setup.Parameter`1.New(System.String[],`0)
  id: New(System.String[],`0)
  parent: SimpleLineLibrary.Setup.Parameter`1
  langs:
  - csharp
  - vb
  name: New(string[], T)
  nameWithType: Parameter<T>.New(string[], T)
  fullName: SimpleLineLibrary.Setup.Parameter<T>.New(string[], T)
  type: Method
  source:
    remote:
      path: SimpleLine/Setup/Options/Parameter.cs
      branch: Rewrite
      repo: https://github.com/DrSa1fer/SimpleLine.git
    id: New
    path: ../SimpleLine/Setup/Options/Parameter.cs
    startLine: 31
  assemblies:
  - SimpleLine
  namespace: SimpleLineLibrary.Setup
  syntax:
    content: public static Parameter<T> New(string[] keys, T value)
    parameters:
    - id: keys
      type: System.String[]
    - id: value
      type: '{T}'
    return:
      type: SimpleLineLibrary.Setup.Parameter`1
    content.vb: Public Shared Function [New](keys As String(), value As T) As Parameter(Of T)
  overload: SimpleLineLibrary.Setup.Parameter`1.New*
  nameWithType.vb: Parameter(Of T).New(String(), T)
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T).New(String(), T)
  name.vb: New(String(), T)
references:
- uid: SimpleLineLibrary.Setup
  commentId: N:SimpleLineLibrary.Setup
  href: SimpleLineLibrary.html
  name: SimpleLineLibrary.Setup
  nameWithType: SimpleLineLibrary.Setup
  fullName: SimpleLineLibrary.Setup
  spec.csharp:
  - uid: SimpleLineLibrary
    name: SimpleLineLibrary
    href: SimpleLineLibrary.html
  - name: .
  - uid: SimpleLineLibrary.Setup
    name: Setup
    href: SimpleLineLibrary.Setup.html
  spec.vb:
  - uid: SimpleLineLibrary
    name: SimpleLineLibrary
    href: SimpleLineLibrary.html
  - name: .
  - uid: SimpleLineLibrary.Setup
    name: Setup
    href: SimpleLineLibrary.Setup.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SimpleLineLibrary.Setup.BaseOption{{T}}
  commentId: T:SimpleLineLibrary.Setup.BaseOption{`0}
  parent: SimpleLineLibrary.Setup
  definition: SimpleLineLibrary.Setup.BaseOption`1
  href: SimpleLineLibrary.Setup.BaseOption-1.html
  name: BaseOption<T>
  nameWithType: BaseOption<T>
  fullName: SimpleLineLibrary.Setup.BaseOption<T>
  nameWithType.vb: BaseOption(Of T)
  fullName.vb: SimpleLineLibrary.Setup.BaseOption(Of T)
  name.vb: BaseOption(Of T)
  spec.csharp:
  - uid: SimpleLineLibrary.Setup.BaseOption`1
    name: BaseOption
    href: SimpleLineLibrary.Setup.BaseOption-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SimpleLineLibrary.Setup.BaseOption`1
    name: BaseOption
    href: SimpleLineLibrary.Setup.BaseOption-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SimpleLineLibrary.Setup.BaseOption`1
  commentId: T:SimpleLineLibrary.Setup.BaseOption`1
  href: SimpleLineLibrary.Setup.BaseOption-1.html
  name: BaseOption<T>
  nameWithType: BaseOption<T>
  fullName: SimpleLineLibrary.Setup.BaseOption<T>
  nameWithType.vb: BaseOption(Of T)
  fullName.vb: SimpleLineLibrary.Setup.BaseOption(Of T)
  name.vb: BaseOption(Of T)
  spec.csharp:
  - uid: SimpleLineLibrary.Setup.BaseOption`1
    name: BaseOption
    href: SimpleLineLibrary.Setup.BaseOption-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SimpleLineLibrary.Setup.BaseOption`1
    name: BaseOption
    href: SimpleLineLibrary.Setup.BaseOption-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SimpleLineLibrary.Setup.Parameter`1.CustomConverter*
  commentId: Overload:SimpleLineLibrary.Setup.Parameter`1.CustomConverter
  href: SimpleLineLibrary.Setup.Parameter-1.html#SimpleLineLibrary_Setup_Parameter_1_CustomConverter
  name: CustomConverter
  nameWithType: Parameter<T>.CustomConverter
  fullName: SimpleLineLibrary.Setup.Parameter<T>.CustomConverter
  nameWithType.vb: Parameter(Of T).CustomConverter
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T).CustomConverter
- uid: System.Func{System.String,{T}}
  commentId: T:System.Func{System.String,`0}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<string, T>
  nameWithType: Func<string, T>
  fullName: System.Func<string, T>
  nameWithType.vb: Func(Of String, T)
  fullName.vb: System.Func(Of String, T)
  name.vb: Func(Of String, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: SimpleLineLibrary.Setup.Parameter`1.#ctor*
  commentId: Overload:SimpleLineLibrary.Setup.Parameter`1.#ctor
  href: SimpleLineLibrary.Setup.Parameter-1.html#SimpleLineLibrary_Setup_Parameter_1__ctor_System_String___
  name: Parameter
  nameWithType: Parameter<T>.Parameter
  fullName: SimpleLineLibrary.Setup.Parameter<T>.Parameter
  nameWithType.vb: Parameter(Of T).New
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T).New
  name.vb: New
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SimpleLineLibrary.Setup.Parameter`1.New*
  commentId: Overload:SimpleLineLibrary.Setup.Parameter`1.New
  href: SimpleLineLibrary.Setup.Parameter-1.html#SimpleLineLibrary_Setup_Parameter_1_New_System_String___
  name: New
  nameWithType: Parameter<T>.New
  fullName: SimpleLineLibrary.Setup.Parameter<T>.New
  nameWithType.vb: Parameter(Of T).New
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T).New
- uid: SimpleLineLibrary.Setup.Parameter`1
  commentId: T:SimpleLineLibrary.Setup.Parameter`1
  parent: SimpleLineLibrary.Setup
  href: SimpleLineLibrary.Setup.Parameter-1.html
  name: Parameter<T>
  nameWithType: Parameter<T>
  fullName: SimpleLineLibrary.Setup.Parameter<T>
  nameWithType.vb: Parameter(Of T)
  fullName.vb: SimpleLineLibrary.Setup.Parameter(Of T)
  name.vb: Parameter(Of T)
  spec.csharp:
  - uid: SimpleLineLibrary.Setup.Parameter`1
    name: Parameter
    href: SimpleLineLibrary.Setup.Parameter-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: SimpleLineLibrary.Setup.Parameter`1
    name: Parameter
    href: SimpleLineLibrary.Setup.Parameter-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
