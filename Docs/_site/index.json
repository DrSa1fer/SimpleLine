{
  "api/SimpleLineLibrary.Setup.Attributes.CategoryAttribute.html": {
    "href": "api/SimpleLineLibrary.Setup.Attributes.CategoryAttribute.html",
    "title": "Class CategoryAttribute | SimpleLine",
    "keywords": "Class CategoryAttribute Namespace SimpleLineLibrary.Setup.Attributes Assembly SimpleLine.dll Adds a category for further use by the library [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public class CategoryAttribute : Attribute Inheritance object Attribute CategoryAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/SimpleLineLibrary.Setup.Attributes.CommandAttribute.html": {
    "href": "api/SimpleLineLibrary.Setup.Attributes.CommandAttribute.html",
    "title": "Class CommandAttribute | SimpleLine",
    "keywords": "Class CommandAttribute Namespace SimpleLineLibrary.Setup.Attributes Assembly SimpleLine.dll Marks a class as a command so that the library can use this [AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = true)] public class CommandAttribute : Attribute Inheritance object Attribute CommandAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CommandAttribute(string) public CommandAttribute(string command) Parameters command string Properties Command public string Command { get; } Property Value string"
  },
  "api/SimpleLineLibrary.Setup.Attributes.CustomKeysAttribute.html": {
    "href": "api/SimpleLineLibrary.Setup.Attributes.CustomKeysAttribute.html",
    "title": "Class CustomKeysAttribute | SimpleLine",
    "keywords": "Class CustomKeysAttribute Namespace SimpleLineLibrary.Setup.Attributes Assembly SimpleLine.dll Sets the keys for the handler parameter [AttributeUsage(AttributeTargets.Parameter, AllowMultiple = false)] public class CustomKeysAttribute : Attribute Inheritance object Attribute CustomKeysAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors CustomKeysAttribute(string, string) public CustomKeysAttribute(string shortKey, string longKey) Parameters shortKey string short key \"-k\" longKey string full key \"--key\" Properties LongKey public string LongKey { get; } Property Value string ShortKey public string ShortKey { get; } Property Value string"
  },
  "api/SimpleLineLibrary.Setup.Attributes.DescriptionAttribute.html": {
    "href": "api/SimpleLineLibrary.Setup.Attributes.DescriptionAttribute.html",
    "title": "Class DescriptionAttribute | SimpleLine",
    "keywords": "Class DescriptionAttribute Namespace SimpleLineLibrary.Setup.Attributes Assembly SimpleLine.dll Adds a description for further use by the library [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public class DescriptionAttribute : Attribute Inheritance object Attribute DescriptionAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors DescriptionAttribute(string) public DescriptionAttribute(string description) Parameters description string Properties Description public string Description { get; } Property Value string"
  },
  "api/SimpleLineLibrary.Setup.Attributes.HandlerAttribute.html": {
    "href": "api/SimpleLineLibrary.Setup.Attributes.HandlerAttribute.html",
    "title": "Class HandlerAttribute | SimpleLine",
    "keywords": "Class HandlerAttribute Namespace SimpleLineLibrary.Setup.Attributes Assembly SimpleLine.dll Marks a method as a handler so that the library can use this [AttributeUsage(AttributeTargets.Method, AllowMultiple = false, Inherited = true)] public class HandlerAttribute : Attribute Inheritance object Attribute HandlerAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors HandlerAttribute() public HandlerAttribute() HandlerAttribute(string) public HandlerAttribute(string key) Parameters key string Properties Key public string Key { get; } Property Value string"
  },
  "api/SimpleLineLibrary.Setup.Attributes.html": {
    "href": "api/SimpleLineLibrary.Setup.Attributes.html",
    "title": "Namespace SimpleLineLibrary.Setup.Attributes | SimpleLine",
    "keywords": "Namespace SimpleLineLibrary.Setup.Attributes Classes CategoryAttribute Adds a category for further use by the library CommandAttribute Marks a class as a command so that the library can use this CustomKeysAttribute Sets the keys for the handler parameter DescriptionAttribute Adds a description for further use by the library HandlerAttribute Marks a method as a handler so that the library can use this"
  },
  "api/SimpleLineLibrary.Setup.Configuration.html": {
    "href": "api/SimpleLineLibrary.Setup.Configuration.html",
    "title": "Class Configuration | SimpleLine",
    "keywords": "Class Configuration Namespace SimpleLineLibrary.Setup Assembly SimpleLine.dll public class Configuration Inheritance object Configuration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Configuration(Assembly) public Configuration(Assembly assembly) Parameters assembly Assembly Properties CommandNotFound public Action<string> CommandNotFound { get; set; } Property Value Action<string> ExceptionHandler public Action<Exception> ExceptionHandler { get; set; } Property Value Action<Exception> HandlerNotFound public Action<IEnumerable<string>> HandlerNotFound { get; set; } Property Value Action<IEnumerable<string>> HelpKeys public HashSet<string> HelpKeys { get; set; } Property Value HashSet<string> NoneArgsHandler public Action? NoneArgsHandler { get; set; } Property Value Action Methods RegisterType<T>(Func<string, T>) public void RegisterType<T>(Func<string, T> converter) Parameters converter Func<string, T> Type Parameters T"
  },
  "api/SimpleLineLibrary.Setup.html": {
    "href": "api/SimpleLineLibrary.Setup.html",
    "title": "Namespace SimpleLineLibrary.Setup | SimpleLine",
    "keywords": "Namespace SimpleLineLibrary.Setup Classes Configuration"
  },
  "api/SimpleLineLibrary.SimpleLine.html": {
    "href": "api/SimpleLineLibrary.SimpleLine.html",
    "title": "Class SimpleLine | SimpleLine",
    "keywords": "Class SimpleLine Namespace SimpleLineLibrary Assembly SimpleLine.dll public class SimpleLine Inheritance object SimpleLine Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Build(Configuration) Build SimpleLine public static SimpleLine Build(Configuration configuration) Parameters configuration Configuration SimpleLine configuration Returns SimpleLine Run(IEnumerable<string>) Launch Point public object? Run(IEnumerable<string> args) Parameters args IEnumerable<string> Input tokens Returns object"
  },
  "api/SimpleLineLibrary.html": {
    "href": "api/SimpleLineLibrary.html",
    "title": "Namespace SimpleLineLibrary | SimpleLine",
    "keywords": "Namespace SimpleLineLibrary Classes SimpleLine"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | SimpleLine",
    "keywords": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | SimpleLine",
    "keywords": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | SimpleLine",
    "keywords": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}